using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using Normal.Realtime;
using Normal.Realtime.Serialization;

[RealtimeModel]
public partial class MeshSyncModel
{
    [RealtimeProperty(1, true, true)]
    private Vector3 _boxCornerPosition1;

    [RealtimeProperty(2, true, true)]
    private Vector3 _boxCornerPosition2;

    [RealtimeProperty(3, true, true)]
    private Vector3 _boxCornerPosition3;

    [RealtimeProperty(4, true, true)]
    private Vector3 _boxCornerPosition4;

    [RealtimeProperty(5, true, true)]
    private Vector3 _boxCornerPosition5;

    [RealtimeProperty(6, true, true)]
    private Vector3 _boxCornerPosition6;

    [RealtimeProperty(7, true, true)]
    private Vector3 _boxCornerPosition7;

    [RealtimeProperty(8, true, true)]
    private Vector3 _boxCornerPosition8;
}

/* ----- Begin Normal Autogenerated Code ----- */
public partial class MeshSyncModel : RealtimeModel {
    public UnityEngine.Vector3 boxCornerPosition1 {
        get {
            return _boxCornerPosition1Property.value;
        }
        set {
            if (_boxCornerPosition1Property.value == value) return;
            _boxCornerPosition1Property.value = value;
            InvalidateReliableLength();
            FireBoxCornerPosition1DidChange(value);
        }
    }
    
    public UnityEngine.Vector3 boxCornerPosition2 {
        get {
            return _boxCornerPosition2Property.value;
        }
        set {
            if (_boxCornerPosition2Property.value == value) return;
            _boxCornerPosition2Property.value = value;
            InvalidateReliableLength();
            FireBoxCornerPosition2DidChange(value);
        }
    }
    
    public UnityEngine.Vector3 boxCornerPosition3 {
        get {
            return _boxCornerPosition3Property.value;
        }
        set {
            if (_boxCornerPosition3Property.value == value) return;
            _boxCornerPosition3Property.value = value;
            InvalidateReliableLength();
            FireBoxCornerPosition3DidChange(value);
        }
    }
    
    public UnityEngine.Vector3 boxCornerPosition4 {
        get {
            return _boxCornerPosition4Property.value;
        }
        set {
            if (_boxCornerPosition4Property.value == value) return;
            _boxCornerPosition4Property.value = value;
            InvalidateReliableLength();
            FireBoxCornerPosition4DidChange(value);
        }
    }
    
    public UnityEngine.Vector3 boxCornerPosition5 {
        get {
            return _boxCornerPosition5Property.value;
        }
        set {
            if (_boxCornerPosition5Property.value == value) return;
            _boxCornerPosition5Property.value = value;
            InvalidateReliableLength();
            FireBoxCornerPosition5DidChange(value);
        }
    }
    
    public UnityEngine.Vector3 boxCornerPosition6 {
        get {
            return _boxCornerPosition6Property.value;
        }
        set {
            if (_boxCornerPosition6Property.value == value) return;
            _boxCornerPosition6Property.value = value;
            InvalidateReliableLength();
            FireBoxCornerPosition6DidChange(value);
        }
    }
    
    public UnityEngine.Vector3 boxCornerPosition7 {
        get {
            return _boxCornerPosition7Property.value;
        }
        set {
            if (_boxCornerPosition7Property.value == value) return;
            _boxCornerPosition7Property.value = value;
            InvalidateReliableLength();
            FireBoxCornerPosition7DidChange(value);
        }
    }
    
    public UnityEngine.Vector3 boxCornerPosition8 {
        get {
            return _boxCornerPosition8Property.value;
        }
        set {
            if (_boxCornerPosition8Property.value == value) return;
            _boxCornerPosition8Property.value = value;
            InvalidateReliableLength();
            FireBoxCornerPosition8DidChange(value);
        }
    }
    
    public delegate void PropertyChangedHandler<in T>(MeshSyncModel model, T value);
    public event PropertyChangedHandler<UnityEngine.Vector3> boxCornerPosition1DidChange;
    public event PropertyChangedHandler<UnityEngine.Vector3> boxCornerPosition2DidChange;
    public event PropertyChangedHandler<UnityEngine.Vector3> boxCornerPosition3DidChange;
    public event PropertyChangedHandler<UnityEngine.Vector3> boxCornerPosition4DidChange;
    public event PropertyChangedHandler<UnityEngine.Vector3> boxCornerPosition5DidChange;
    public event PropertyChangedHandler<UnityEngine.Vector3> boxCornerPosition6DidChange;
    public event PropertyChangedHandler<UnityEngine.Vector3> boxCornerPosition7DidChange;
    public event PropertyChangedHandler<UnityEngine.Vector3> boxCornerPosition8DidChange;
    
    public enum PropertyID : uint {
        BoxCornerPosition1 = 1,
        BoxCornerPosition2 = 2,
        BoxCornerPosition3 = 3,
        BoxCornerPosition4 = 4,
        BoxCornerPosition5 = 5,
        BoxCornerPosition6 = 6,
        BoxCornerPosition7 = 7,
        BoxCornerPosition8 = 8,
    }
    
    #region Properties
    
    private ReliableProperty<UnityEngine.Vector3> _boxCornerPosition1Property;
    
    private ReliableProperty<UnityEngine.Vector3> _boxCornerPosition2Property;
    
    private ReliableProperty<UnityEngine.Vector3> _boxCornerPosition3Property;
    
    private ReliableProperty<UnityEngine.Vector3> _boxCornerPosition4Property;
    
    private ReliableProperty<UnityEngine.Vector3> _boxCornerPosition5Property;
    
    private ReliableProperty<UnityEngine.Vector3> _boxCornerPosition6Property;
    
    private ReliableProperty<UnityEngine.Vector3> _boxCornerPosition7Property;
    
    private ReliableProperty<UnityEngine.Vector3> _boxCornerPosition8Property;
    
    #endregion
    
    public MeshSyncModel() : base(null) {
        _boxCornerPosition1Property = new ReliableProperty<UnityEngine.Vector3>(1, _boxCornerPosition1);
        _boxCornerPosition2Property = new ReliableProperty<UnityEngine.Vector3>(2, _boxCornerPosition2);
        _boxCornerPosition3Property = new ReliableProperty<UnityEngine.Vector3>(3, _boxCornerPosition3);
        _boxCornerPosition4Property = new ReliableProperty<UnityEngine.Vector3>(4, _boxCornerPosition4);
        _boxCornerPosition5Property = new ReliableProperty<UnityEngine.Vector3>(5, _boxCornerPosition5);
        _boxCornerPosition6Property = new ReliableProperty<UnityEngine.Vector3>(6, _boxCornerPosition6);
        _boxCornerPosition7Property = new ReliableProperty<UnityEngine.Vector3>(7, _boxCornerPosition7);
        _boxCornerPosition8Property = new ReliableProperty<UnityEngine.Vector3>(8, _boxCornerPosition8);
    }
    
    protected override void OnParentReplaced(RealtimeModel previousParent, RealtimeModel currentParent) {
        _boxCornerPosition1Property.UnsubscribeCallback();
        _boxCornerPosition2Property.UnsubscribeCallback();
        _boxCornerPosition3Property.UnsubscribeCallback();
        _boxCornerPosition4Property.UnsubscribeCallback();
        _boxCornerPosition5Property.UnsubscribeCallback();
        _boxCornerPosition6Property.UnsubscribeCallback();
        _boxCornerPosition7Property.UnsubscribeCallback();
        _boxCornerPosition8Property.UnsubscribeCallback();
    }
    
    private void FireBoxCornerPosition1DidChange(UnityEngine.Vector3 value) {
        try {
            boxCornerPosition1DidChange?.Invoke(this, value);
        } catch (System.Exception exception) {
            UnityEngine.Debug.LogException(exception);
        }
    }
    
    private void FireBoxCornerPosition2DidChange(UnityEngine.Vector3 value) {
        try {
            boxCornerPosition2DidChange?.Invoke(this, value);
        } catch (System.Exception exception) {
            UnityEngine.Debug.LogException(exception);
        }
    }
    
    private void FireBoxCornerPosition3DidChange(UnityEngine.Vector3 value) {
        try {
            boxCornerPosition3DidChange?.Invoke(this, value);
        } catch (System.Exception exception) {
            UnityEngine.Debug.LogException(exception);
        }
    }
    
    private void FireBoxCornerPosition4DidChange(UnityEngine.Vector3 value) {
        try {
            boxCornerPosition4DidChange?.Invoke(this, value);
        } catch (System.Exception exception) {
            UnityEngine.Debug.LogException(exception);
        }
    }
    
    private void FireBoxCornerPosition5DidChange(UnityEngine.Vector3 value) {
        try {
            boxCornerPosition5DidChange?.Invoke(this, value);
        } catch (System.Exception exception) {
            UnityEngine.Debug.LogException(exception);
        }
    }
    
    private void FireBoxCornerPosition6DidChange(UnityEngine.Vector3 value) {
        try {
            boxCornerPosition6DidChange?.Invoke(this, value);
        } catch (System.Exception exception) {
            UnityEngine.Debug.LogException(exception);
        }
    }
    
    private void FireBoxCornerPosition7DidChange(UnityEngine.Vector3 value) {
        try {
            boxCornerPosition7DidChange?.Invoke(this, value);
        } catch (System.Exception exception) {
            UnityEngine.Debug.LogException(exception);
        }
    }
    
    private void FireBoxCornerPosition8DidChange(UnityEngine.Vector3 value) {
        try {
            boxCornerPosition8DidChange?.Invoke(this, value);
        } catch (System.Exception exception) {
            UnityEngine.Debug.LogException(exception);
        }
    }
    
    protected override int WriteLength(StreamContext context) {
        var length = 0;
        length += _boxCornerPosition1Property.WriteLength(context);
        length += _boxCornerPosition2Property.WriteLength(context);
        length += _boxCornerPosition3Property.WriteLength(context);
        length += _boxCornerPosition4Property.WriteLength(context);
        length += _boxCornerPosition5Property.WriteLength(context);
        length += _boxCornerPosition6Property.WriteLength(context);
        length += _boxCornerPosition7Property.WriteLength(context);
        length += _boxCornerPosition8Property.WriteLength(context);
        return length;
    }
    
    protected override void Write(WriteStream stream, StreamContext context) {
        var writes = false;
        writes |= _boxCornerPosition1Property.Write(stream, context);
        writes |= _boxCornerPosition2Property.Write(stream, context);
        writes |= _boxCornerPosition3Property.Write(stream, context);
        writes |= _boxCornerPosition4Property.Write(stream, context);
        writes |= _boxCornerPosition5Property.Write(stream, context);
        writes |= _boxCornerPosition6Property.Write(stream, context);
        writes |= _boxCornerPosition7Property.Write(stream, context);
        writes |= _boxCornerPosition8Property.Write(stream, context);
        if (writes) InvalidateContextLength(context);
    }
    
    protected override void Read(ReadStream stream, StreamContext context) {
        var anyPropertiesChanged = false;
        while (stream.ReadNextPropertyID(out uint propertyID)) {
            var changed = false;
            switch (propertyID) {
                case (uint) PropertyID.BoxCornerPosition1: {
                    changed = _boxCornerPosition1Property.Read(stream, context);
                    if (changed) FireBoxCornerPosition1DidChange(boxCornerPosition1);
                    break;
                }
                case (uint) PropertyID.BoxCornerPosition2: {
                    changed = _boxCornerPosition2Property.Read(stream, context);
                    if (changed) FireBoxCornerPosition2DidChange(boxCornerPosition2);
                    break;
                }
                case (uint) PropertyID.BoxCornerPosition3: {
                    changed = _boxCornerPosition3Property.Read(stream, context);
                    if (changed) FireBoxCornerPosition3DidChange(boxCornerPosition3);
                    break;
                }
                case (uint) PropertyID.BoxCornerPosition4: {
                    changed = _boxCornerPosition4Property.Read(stream, context);
                    if (changed) FireBoxCornerPosition4DidChange(boxCornerPosition4);
                    break;
                }
                case (uint) PropertyID.BoxCornerPosition5: {
                    changed = _boxCornerPosition5Property.Read(stream, context);
                    if (changed) FireBoxCornerPosition5DidChange(boxCornerPosition5);
                    break;
                }
                case (uint) PropertyID.BoxCornerPosition6: {
                    changed = _boxCornerPosition6Property.Read(stream, context);
                    if (changed) FireBoxCornerPosition6DidChange(boxCornerPosition6);
                    break;
                }
                case (uint) PropertyID.BoxCornerPosition7: {
                    changed = _boxCornerPosition7Property.Read(stream, context);
                    if (changed) FireBoxCornerPosition7DidChange(boxCornerPosition7);
                    break;
                }
                case (uint) PropertyID.BoxCornerPosition8: {
                    changed = _boxCornerPosition8Property.Read(stream, context);
                    if (changed) FireBoxCornerPosition8DidChange(boxCornerPosition8);
                    break;
                }
                default: {
                    stream.SkipProperty();
                    break;
                }
            }
            anyPropertiesChanged |= changed;
        }
        if (anyPropertiesChanged) {
            UpdateBackingFields();
        }
    }
    
    private void UpdateBackingFields() {
        _boxCornerPosition1 = boxCornerPosition1;
        _boxCornerPosition2 = boxCornerPosition2;
        _boxCornerPosition3 = boxCornerPosition3;
        _boxCornerPosition4 = boxCornerPosition4;
        _boxCornerPosition5 = boxCornerPosition5;
        _boxCornerPosition6 = boxCornerPosition6;
        _boxCornerPosition7 = boxCornerPosition7;
        _boxCornerPosition8 = boxCornerPosition8;
    }
    
}
/* ----- End Normal Autogenerated Code ----- */
